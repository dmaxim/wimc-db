
trigger:
 branches:
   include:
   - main
 paths:
   exclude:
     - Deploy

pool:
  name: 'Azure Linux VM'

variables:
  registryServiceConnection: 'mxinfo-containers'
  containerRepository: 'wimc.database'
  imageName: 'mxinfo.azurecr.io/wimc.database'
  tag: '$(build.buildId)'
  lowMediumResults: 'trivy-report-low-med.xml'
  highCritResults: 'trivy-report-high-crit.xml'

steps:

- task: CmdLine@2
  displayName: "Lint Docker File"
  inputs:
    script:  |
        docker run --rm --volume $PWD:/work:ro --workdir /work hadolint/hadolint:v2.5.0 hadolint Dockerfile > hadolint-results.txt
    workingDirectory: $(build.sourcesDirectory)

- script: docker build -f Dockerfile -t $(imageName):$(tag) .
  displayName: 'docker build'

- task: CmdLine@2
  displayName: "Run Trivy Scan"
  inputs:
    script: |
      trivy image --exit-code 0 --severity LOW,MEDIUM --format template --template "@/home/devops/junit.tpl" -o $(lowMediumResults) $(imageName):$(tag)
      trivy image --exit-code 0 --severity HIGH,CRITICAL --format template --template "@/home/devops/junit.tpl" -o $(highCritResults) $(imageName):$(tag)

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/$(lowMediumResults)'
    mergeTestResults: true
    failTaskOnFailedTests: false
    testRunTitle: 'Trivy - Low Medium Vulnerabilities'
  condition: 'always()'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/$(highCritResults)'
    mergeTestResults: true
    failTaskOnFailedTests: true
    testRunTitle: 'Trivy - High Critical Vulnerabilities'
  condition: 'always()'

- task: Docker@2
  displayName: "Push Docker Image"
  inputs:
    containerRegistry: $(registryServiceConnection)
    repository: $(containerRepository)
    command: 'push'
    container: $(imageName):$(tag)
    
- task: Docker@2
  displayName: "Remove Docker Image"
  inputs: 
    command: 'rmi'
    arguments: $(imageName):$(tag)  
